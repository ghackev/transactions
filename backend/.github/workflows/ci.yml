name: CI

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]
  workflow_dispatch: {}

# Cancel redundant runs from the same branch / PR
concurrency:
  group: ci-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-test:
    name: Lint · Type‑check · Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: verde_money_test
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/verde_money_test
      CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
      TESTING_USER_ID: ${{ secrets.TESTING_USER_ID }}
      NODE_ENV: test
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Run migrations (dev)
        run: npx prisma migrate deploy

      - name: Lint
        run: npm run lint

      - name: Type‑check
        run: npm run type-check

      - name: Unit & integration tests
        run: npm run test:ci

      - name: Upload coverage to Codecov · optional
        if: success() && env.CODECOV_TOKEN != ''
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # Optional job — only runs when the workflow is manually dispatched OR a tag v*.*.* is pushed
  deploy:
    name: Build & Deploy (Docker)
    needs: build-test
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}

      - name: Run Prisma migrate deploy on prod DB
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_PROD }}
        run: npx prisma migrate deploy

      - name: Notify Slack
        if: always()
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "text": "${{ job.status }}: CI/CD pipeline for *${{ github.repository }}* (commit ${{ github.sha }})"
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

