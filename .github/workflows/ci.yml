name: PR Tests with Docker
permissions:
  contents: read

on:
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # 1) Build your app image
      - name: Build API image
        run: |
          docker build -t api-under-test .

      # 2) Start Postgres container
      - name: Run Postgres
        run: |
          docker network create test-net || true
          docker run -d --rm \
            --name pg-test \
            --network test-net \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=postgres \
            -e POSTGRES_DB=test_db \
            postgres:17

      # 3) Wait for Postgres to be ready
      - name: Wait for Postgres
        run: |
          until docker exec pg-test pg_isready -U postgres -d test_db; do
            sleep 1
          done

      # 4) Run your API container pointing at pg-test
      - name: Run API
        env:
          DATABASE_URL: postgres://postgres:postgres@pg-test:5432/test_db
        run: |
          docker run -d --rm \
            --name app-test \
            --network test-net \
            -e DATABASE_URL \
            api-under-test

      # 5) Wait for your API to be healthy
      - name: Wait for API
        run: |
          until curl -sf http://localhost:3000/api/health; do
            sleep 1
          done

      # 6) Execute tests (e2e or integration)
      - name: E2E Tests
        run: |
          docker exec app-test npm test

      # 7) Tear down
      - name: Cleanup
        run: |
          docker stop app-test pg-test
          docker network rm test-net
