name: CI

on:
  pull_request: {}                 # PRs contra cualquier rama
  push:
    branches: [main]               # merge a main = deploy-staging
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    name: Lint • Type-check • Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: verde_money_test
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      NODE_ENV: test
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/verde_money_test
      CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
      TESTING_USER_ID:  ${{ secrets.TESTING_USER_ID }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci
      - run: npx prisma generate
      - run: npx prisma migrate deploy
      - run: npm run lint
      - run: npm run type-check
      - run: npm run test:ci

  # ---------- Previews para cada PR ----------
  deploy-preview:
    if: github.event_name == 'pull_request'
    needs: build-test
    runs-on: ubuntu-latest
    environment:
      name: pr-${{ github.event.number }}
    steps:
      - uses: actions/checkout@v4
      # Ejemplo genérico; sustituye por tu proveedor de review-apps.
      - run: echo 'Deploying preview…'

  # ---------- Staging automático (main) ----------
  deploy-staging:
    if: github.ref == 'refs/heads/main'
    needs: build-test
    runs-on: ubuntu-latest
    environment: staging
    env:
      DATABASE_URL: ${{ secrets.DB_STAGING_URL }}
    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}

      - name: Run prisma migrate deploy (staging)
        run: npx prisma migrate deploy

      - name: Notify Slack
        if: always()
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            { "text": "*STAGING* · Build `${{ github.sha }}` → status: *${{ job.status }}*" }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
